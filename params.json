{"name":"JellyJolly博客引擎 Openshift发布版","tagline":"一个开源的博客引擎","google":"","body":"### JellyJolly\r\n是一个开源（GPL V3）的、Java编写的、运行在Tomcat服务器上的博客引擎。\r\n\r\n### Openshift发布版\r\n运行在由红帽（Redhat）提供的PAAS平台Openshift之上，通过rhc命令行接口部署。\r\n\r\n### 部署JellyJolly到我的Openshift上\r\n详见项目主页的[说明文件](https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution/blob/master/README.md)\r\n\r\n### 获取JellyJolly项目源码\r\n整个项目由若干子项目构成，包括：\r\n* [JellyJolly Model](https://github.com/JellyJollyTeam/JellyJollyModel)，数据模型\r\n* [JellyJolly Persistence API](https://github.com/JellyJollyTeam/JellyJollyPersistenceAPI)，数据持久化接口\r\n* [JellyJolly Plugin API](https://github.com/JellyJollyTeam/JellyJollyPluginAPI)，插件接口（尚未完成）\r\n* [JellyJolly Core](https://github.com/JellyJollyTeam/JellyJollyCore)，博客引擎核心\r\n* [JellyJolly Persistence Mysql Implementation](https://github.com/JellyJollyTeam/JellyJollyPersistenceMysqlImpl)，数据持久的MySQL参考实现\r\n* [JellyJolly Openshift Distribution](https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution)，Openshift发布版\r\n\r\n通过访问各子项目主页，根据页内所示git仓库地址，来单独获取某个子项目源码\r\n例如，可以通过\r\n```\r\ngit clone https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution.git\r\n```\r\n获取Openshift发布版的源码。\r\n当然无需获取所有的子项目来构建整个项目，JellyJolly使用Maven构建工具，可以通过\r\n```\r\nmvn clean install\r\n```\r\n来解决其它并未下载源码的子项目所依赖的工件。\r\n\r\n### 定制自己的JellyJolly发布版\r\nJellyJolly不仅仅运行在Openshift平台上。她可以运行在您配置的Tomcat + MySQL服务器上。\r\n您无需为了定制去学习开发相关的知识。当然，了解一些Java、数据库或者Web开发的相关知识都会帮助您更好地定制自己的发布版。\r\n#### MySQL数据库定制\r\n#### 界面定制\r\n#### 持久层定制（使用其它数据库产品）","note":"Don't delete this file! It's used internally to help with page regeneration."}