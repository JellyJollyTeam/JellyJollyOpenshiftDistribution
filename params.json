{"body":"### JellyJolly ###\r\n是一个开源（GPL V3）的、Java编写的、运行在Tomcat服务器上的博客引擎。\r\n\r\n### Openshift发布版 ###\r\n运行在由红帽（Redhat）提供的PAAS平台Openshift之上，通过rhc命令行接口部署。\r\n\r\n### 部署JellyJolly到我的Openshift上 ###\r\n详见项目主页的[说明文件](https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution/blob/master/README.md)\r\n\r\n### 获取JellyJolly项目源码 ###\r\n整个项目由若干子项目构成，包括：\r\n* [JellyJolly Model](https://github.com/JellyJollyTeam/JellyJollyModel)，数据模型\r\n* [JellyJolly Persistence API](https://github.com/JellyJollyTeam/JellyJollyPersistenceAPI)，数据持久化接口\r\n* [JellyJolly Plugin API](https://github.com/JellyJollyTeam/JellyJollyPluginAPI)，插件接口（尚未完成）\r\n* [JellyJolly Core](https://github.com/JellyJollyTeam/JellyJollyCore)，博客引擎核心\r\n* [JellyJolly Persistence Mysql Implementation](https://github.com/JellyJollyTeam/JellyJollyPersistenceMysqlImpl)，数据持久的MySQL参考实现\r\n* [JellyJolly Openshift Distribution](https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution)，Openshift发布版\r\n\r\n通过访问各子项目主页，根据页内所示git仓库地址，来单独获取某个子项目源码\r\n例如，可以通过\r\n```\r\ngit clone https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution.git\r\n```\r\n获取Openshift发布版的源码。\r\n当然无需获取所有的子项目来构建整个项目，JellyJolly使用Maven构建工具，可以通过\r\n```\r\nmvn clean install\r\n```\r\n来解决其它并未下载源码的子项目所依赖的工件。\r\n\r\n### 定制自己的JellyJolly发布版 ###\r\nJellyJolly不仅仅运行在Openshift平台上。她可以运行在您配置的Tomcat + MySQL服务器上。\r\n您无需为了定制去学习开发相关的知识。当然，了解一些Java、数据库或者Web开发的相关知识都会帮助您更好地定制自己的发布版。\r\n\r\n#### MySQL数据库定制 ####\r\n您所需要做的是克隆[Openshift发布版](https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution)，并更改其中的配置文件，以适应非Openshift的运行环境。以下为详细步骤：\r\n1. 克隆Openshift发布版\r\n```\r\ngit clone https://github.com/JellyJollyTeam/JellyJollyOpenshiftDistribution.git\r\n```\r\n2. 修改数据库链接参数\r\n修改项目目录下src/main/resources/persistenceContext.xml中的如下节点，\r\n```\r\n<bean id=\"dataSource\"\r\n          class=\"org.apache.commons.dbcp.BasicDataSource\" scope=\"singleton\">\r\n    <property name=\"driverClassName\" value=\"${dbcp.driverClassName}\"/>\r\n    <property name=\"url\" value=\"jdbc:mysql://${OPENSHIFT_MYSQL_DB_HOST}:${OPENSHIFT_MYSQL_DB_PORT}/jellyjolly_schema?useUnicode=true&amp;characterEncoding=UTF-8\"/>\r\n    <property name=\"username\" value=\"${OPENSHIFT_MYSQL_DB_USERNAME}\"/>\r\n    <property name=\"password\" value=\"${OPENSHIFT_MYSQL_DB_PASSWORD}\"/>\r\n    <property name=\"initialSize\" value=\"${dbcp.initialSize}\"/>\r\n    <property name=\"maxActive\" value=\"${dbcp.maxActive}\"/>\r\n    <property name=\"testOnBorrow\" value=\"true\"/>\r\n    <property name=\"validationQuery\" value=\"SELECT 1;\"/>\r\n</bean>\r\n```\r\n把${OPENSHIFT_MYSQL_DB_HOST}修改为您数据库的地址；把${OPENSHIFT_MYSQL_DB_PORT}修改为您数据库的端口；把${OPENSHIFT_MYSQL_DB_USERNAME}、${OPENSHIFT_MYSQL_DB_PASSWORD}分别修改为您的数据库账户的用户名及密码。\r\n如：\r\n```\r\n<bean id=\"dataSource\"\r\n          class=\"org.apache.commons.dbcp.BasicDataSource\" scope=\"singleton\">\r\n    <property name=\"driverClassName\" value=\"${dbcp.driverClassName}\"/>\r\n    <property name=\"url\" value=\"jdbc:mysql://127.0.0.1:3306/jellyjolly_schema?useUnicode=true&amp;characterEncoding=UTF-8\"/>\r\n    <property name=\"username\" value=\"root\"/>\r\n    <property name=\"password\" value=\"root\"/>\r\n    <property name=\"initialSize\" value=\"${dbcp.initialSize}\"/>\r\n    <property name=\"maxActive\" value=\"${dbcp.maxActive}\"/>\r\n    <property name=\"testOnBorrow\" value=\"true\"/>\r\n    <property name=\"validationQuery\" value=\"SELECT 1;\"/>\r\n</bean>\r\n```\r\n\r\n3. 修改数据库连接池配置（可选）\r\n修改项目目录下src/main/resources/dbcp.properties，\r\n```\r\ndbcp.driverClassName=com.mysql.jdbc.Driver\r\ndbcp.initialSize=3\r\ndbcp.maxActive=10\r\n```\r\n以上三项分别对应，数据库连接驱动类、连接池初始大小、连接池最多活动的连接数。\r\n\r\n4. 打包并部署至您的Tomcat服务器\r\n运行Maven指令，打包war\r\n```\r\nmvn package\r\n```\r\n或借助IDE打包。移动war至Tomcat的webapps目录下，或者使用manager部署。\r\n\r\n5. 导入SQL Schema\r\n运行Maven指令，导入SQL文件\r\n```\r\nmvn sql:execute\r\n```\r\n\r\n6. 完成最后的步骤\r\n打开浏览器，访问JellyJolly对应的部署目录下的/install路径，填写基本信息完成，即完成了应用的安装。\r\n\r\n#### 界面定制 ####\r\n#### 持久层定制（使用其它数据库产品） ####","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"JellyJolly博客引擎 Openshift发布版","tagline":"一个开源的博客引擎","google":""}